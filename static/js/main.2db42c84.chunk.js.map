{"version":3,"sources":["components/DateTime.jsx","components/DateTimePretty.jsx","components/Video.jsx","components/VideoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["DateTime","props","className","date","DateTimePretty","oldDate","moment","nowDate","durationDate","duration","diff","durationString","asHours","asMinutes","toFixed","asDays","Video","title","index","src","url","frameBorder","allow","allowFullScreen","VideoList","list","map","item","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAEe,SAASA,EAASC,GAC/B,OACI,mBAAGC,UAAU,OAAb,SAAqBD,EAAME,OCsBlBC,MAjBf,YAAiC,IAARD,EAAO,EAAPA,KACjBE,EAAUC,IAAOH,GACjBI,EAAUD,MACVE,EAAeF,IAAOG,SAASF,EAAQG,KAAKL,IAC9CM,EAAiB,GAUrB,OAPEA,EADEH,EAAaI,UAAY,EACb,UAAMJ,EAAaK,YAAYC,QAAQ,GAAvC,kEACLN,EAAaI,UAAY,EACpB,UAAMJ,EAAaO,SAASD,QAAQ,GAApC,4DAEA,UAAMN,EAAaI,UAAUE,QAAQ,GAArC,kEAGT,cAACd,EAAD,CAAUG,KAAMQ,KCpBV,SAASK,EAAMf,GAC5B,OACI,sBAAKC,UAAU,QAAf,UACI,wBAAQe,MAAK,gBAAWhB,EAAMiB,OAASC,IAAKlB,EAAMmB,IAAKC,YAAY,IAAIC,MAAM,4BAA4BC,iBAAe,IACxH,cAAC,EAAD,CAAgBpB,KAAMF,EAAME,UCJvB,SAASqB,EAAUvB,GAChC,OAAOA,EAAMwB,KAAKC,KAAI,SAACC,EAAMT,GAAP,OAAiB,cAACF,EAAD,CAAmBE,MAAOA,EAAOE,IAAKO,EAAKP,IAAKjB,KAAMwB,EAAKxB,MAA/Ce,MCDtC,SAASU,IAAO,IAAD,EACXC,mBAAS,CACpB,CACIT,IAAK,gFACLjB,KAAM,uBAEV,CACIiB,IAAK,gFACLjB,KAAM,uBAEV,CACIiB,IAAK,gFACLjB,KAAM,uBAEV,CACIiB,IAAK,gFACLjB,KAAM,uBAEV,CACIiB,IAAK,gFACLjB,KAAM,uBAEV,CACIiB,IAAK,gFACLjB,KAAM,yBAvBPsB,EADmB,oBA4B1B,OACI,cAACD,EAAD,CAAWC,KAAMA,IChCzB,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2db42c84.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function DateTime(props) {\n  return (\n      <p className=\"date\">{props.date}</p>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from \"moment\";\nimport DateTime from \"./DateTime\"\n\nDateTimePretty.propTypes = {\n  date: PropTypes.string.isRequired,\n};\n\nfunction DateTimePretty({date}) {\n  const oldDate = moment(date);\n  const nowDate = moment();\n  const durationDate = moment.duration(nowDate.diff(oldDate));\n  let durationString = \"\";\n\n  if (durationDate.asHours() < 0) {\n    durationString = `${durationDate.asMinutes().toFixed(0)} минут назад`;\n  } else if (durationDate.asHours() > 0) {\n    durationString = `${durationDate.asDays().toFixed(0)} дней назад`;\n  } else {\n    durationString = `${durationDate.asHours().toFixed(0)} часов назад`;\n  }\n\n  return <DateTime date={durationString}></DateTime>\n}\n\nexport default DateTimePretty;","import React from 'react';\nimport DateTimePretty from \"./DateTimePretty\";\n\nexport default function Video(props) {\n  return (\n      <div className=\"video\">\n          <iframe title={`iframe${props.index}`} src={props.url} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen></iframe>\n          <DateTimePretty date={props.date}></DateTimePretty>\n      </div>\n  )\n}","import React from \"react\";\nimport Video from \"./Video\"\n\nexport default function VideoList(props) {\n  return props.list.map((item, index) => <Video key={index} index={index} url={item.url} date={item.date} />);\n}","import React, {useState} from 'react';\nimport VideoList from \"./components/VideoList\"\n\nexport default function App() {\n    const [list] = useState([\n        {\n            url: 'https://www.youtube.com/embed/rN6nlNC9WQA?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2017-07-31 13:24:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/dVkK36KOcqs?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2018-03-03 12:10:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/xGRjCa49C6U?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2018-02-03 23:16:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/RK1K2bCg4J8?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2018-01-03 12:10:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/TKmGU77INaM?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2018-01-01 16:17:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/TxbE79-1OSI?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2017-12-02 05:24:00'\n        },\n    ]);\n\n    return (\n        <VideoList list={list} />\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}